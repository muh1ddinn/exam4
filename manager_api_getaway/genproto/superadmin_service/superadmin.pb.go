// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: superadmin.proto

package superadmin_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{0}
}

type TableName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName   string `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Outfilename string `protobuf:"bytes,2,opt,name=outfilename,proto3" json:"outfilename,omitempty"`
}

func (x *TableName) Reset() {
	*x = TableName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableName) ProtoMessage() {}

func (x *TableName) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableName.ProtoReflect.Descriptor instead.
func (*TableName) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{1}
}

func (x *TableName) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *TableName) GetOutfilename() string {
	if x != nil {
		return x.Outfilename
	}
	return ""
}

type ManagerStudent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname    string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone       string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	PaidSum     float64 `protobuf:"fixed64,4,opt,name=paid_sum,json=paidSum,proto3" json:"paid_sum,omitempty"`
	CourseCount int32   `protobuf:"varint,5,opt,name=course_count,json=courseCount,proto3" json:"course_count,omitempty"`
	Totalsum    float64 `protobuf:"fixed64,6,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
}

func (x *ManagerStudent) Reset() {
	*x = ManagerStudent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerStudent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerStudent) ProtoMessage() {}

func (x *ManagerStudent) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerStudent.ProtoReflect.Descriptor instead.
func (*ManagerStudent) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{2}
}

func (x *ManagerStudent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManagerStudent) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *ManagerStudent) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ManagerStudent) GetPaidSum() float64 {
	if x != nil {
		return x.PaidSum
	}
	return 0
}

func (x *ManagerStudent) GetCourseCount() int32 {
	if x != nil {
		return x.CourseCount
	}
	return 0
}

func (x *ManagerStudent) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

type CreateManagerStudent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullname    string  `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone       string  `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	PaidSum     float64 `protobuf:"fixed64,3,opt,name=paid_sum,json=paidSum,proto3" json:"paid_sum,omitempty"`
	CourseCount int32   `protobuf:"varint,4,opt,name=course_count,json=courseCount,proto3" json:"course_count,omitempty"`
	Totalsum    float64 `protobuf:"fixed64,5,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
}

func (x *CreateManagerStudent) Reset() {
	*x = CreateManagerStudent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManagerStudent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManagerStudent) ProtoMessage() {}

func (x *CreateManagerStudent) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManagerStudent.ProtoReflect.Descriptor instead.
func (*CreateManagerStudent) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{3}
}

func (x *CreateManagerStudent) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CreateManagerStudent) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateManagerStudent) GetPaidSum() float64 {
	if x != nil {
		return x.PaidSum
	}
	return 0
}

func (x *CreateManagerStudent) GetCourseCount() int32 {
	if x != nil {
		return x.CourseCount
	}
	return 0
}

func (x *CreateManagerStudent) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

type UpdateManagerStudent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname    string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone       string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	PaidSum     float64 `protobuf:"fixed64,4,opt,name=paid_sum,json=paidSum,proto3" json:"paid_sum,omitempty"`
	CourseCount int32   `protobuf:"varint,5,opt,name=course_count,json=courseCount,proto3" json:"course_count,omitempty"`
	Totalsum    float64 `protobuf:"fixed64,6,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
}

func (x *UpdateManagerStudent) Reset() {
	*x = UpdateManagerStudent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManagerStudent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManagerStudent) ProtoMessage() {}

func (x *UpdateManagerStudent) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManagerStudent.ProtoReflect.Descriptor instead.
func (*UpdateManagerStudent) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateManagerStudent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateManagerStudent) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *UpdateManagerStudent) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateManagerStudent) GetPaidSum() float64 {
	if x != nil {
		return x.PaidSum
	}
	return 0
}

func (x *UpdateManagerStudent) GetCourseCount() int32 {
	if x != nil {
		return x.CourseCount
	}
	return 0
}

func (x *UpdateManagerStudent) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

type ManagerStudentPrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ManagerStudentPrimaryKey) Reset() {
	*x = ManagerStudentPrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerStudentPrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerStudentPrimaryKey) ProtoMessage() {}

func (x *ManagerStudentPrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerStudentPrimaryKey.ProtoReflect.Descriptor instead.
func (*ManagerStudentPrimaryKey) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{5}
}

func (x *ManagerStudentPrimaryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetListManagerStudentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	Page   int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetListManagerStudentRequest) Reset() {
	*x = GetListManagerStudentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListManagerStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListManagerStudentRequest) ProtoMessage() {}

func (x *GetListManagerStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListManagerStudentRequest.ProtoReflect.Descriptor instead.
func (*GetListManagerStudentRequest) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{6}
}

func (x *GetListManagerStudentRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetListManagerStudentRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListManagerStudentRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetListManagerStudentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count           int32             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	ManagerStudents []*ManagerStudent `protobuf:"bytes,2,rep,name=manager_students,json=managerStudents,proto3" json:"manager_students,omitempty"`
}

func (x *GetListManagerStudentResponse) Reset() {
	*x = GetListManagerStudentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListManagerStudentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListManagerStudentResponse) ProtoMessage() {}

func (x *GetListManagerStudentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListManagerStudentResponse.ProtoReflect.Descriptor instead.
func (*GetListManagerStudentResponse) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{7}
}

func (x *GetListManagerStudentResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListManagerStudentResponse) GetManagerStudents() []*ManagerStudent {
	if x != nil {
		return x.ManagerStudents
	}
	return nil
}

type ManagerTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname     string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone        string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary       float64 `protobuf:"fixed64,4,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked int32   `protobuf:"varint,5,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	Totalsum     float64 `protobuf:"fixed64,6,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
	IeltsScore   float64 `protobuf:"fixed64,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
}

func (x *ManagerTeacher) Reset() {
	*x = ManagerTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerTeacher) ProtoMessage() {}

func (x *ManagerTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerTeacher.ProtoReflect.Descriptor instead.
func (*ManagerTeacher) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{8}
}

func (x *ManagerTeacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManagerTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *ManagerTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ManagerTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *ManagerTeacher) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *ManagerTeacher) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

func (x *ManagerTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

type CreateManagerTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullname     string  `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone        string  `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary       float64 `protobuf:"fixed64,3,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked int32   `protobuf:"varint,4,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	Totalsum     float64 `protobuf:"fixed64,5,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
	IeltsScore   float64 `protobuf:"fixed64,6,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
}

func (x *CreateManagerTeacher) Reset() {
	*x = CreateManagerTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManagerTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManagerTeacher) ProtoMessage() {}

func (x *CreateManagerTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManagerTeacher.ProtoReflect.Descriptor instead.
func (*CreateManagerTeacher) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{9}
}

func (x *CreateManagerTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CreateManagerTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateManagerTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *CreateManagerTeacher) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *CreateManagerTeacher) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

func (x *CreateManagerTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

type UpdateManagerTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname     string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone        string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary       float64 `protobuf:"fixed64,4,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked int32   `protobuf:"varint,5,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	Totalsum     float64 `protobuf:"fixed64,6,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
	IeltsScore   float64 `protobuf:"fixed64,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
}

func (x *UpdateManagerTeacher) Reset() {
	*x = UpdateManagerTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManagerTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManagerTeacher) ProtoMessage() {}

func (x *UpdateManagerTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManagerTeacher.ProtoReflect.Descriptor instead.
func (*UpdateManagerTeacher) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateManagerTeacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateManagerTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *UpdateManagerTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateManagerTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *UpdateManagerTeacher) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *UpdateManagerTeacher) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

func (x *UpdateManagerTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

type ManagerTeacherPrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ManagerTeacherPrimaryKey) Reset() {
	*x = ManagerTeacherPrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerTeacherPrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerTeacherPrimaryKey) ProtoMessage() {}

func (x *ManagerTeacherPrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerTeacherPrimaryKey.ProtoReflect.Descriptor instead.
func (*ManagerTeacherPrimaryKey) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{11}
}

func (x *ManagerTeacherPrimaryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetListManagerTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	Page   int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetListManagerTeacherRequest) Reset() {
	*x = GetListManagerTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListManagerTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListManagerTeacherRequest) ProtoMessage() {}

func (x *GetListManagerTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListManagerTeacherRequest.ProtoReflect.Descriptor instead.
func (*GetListManagerTeacherRequest) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{12}
}

func (x *GetListManagerTeacherRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetListManagerTeacherRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListManagerTeacherRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetListManagerTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count           int32             `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	ManagerTeachers []*ManagerTeacher `protobuf:"bytes,2,rep,name=manager_teachers,json=managerTeachers,proto3" json:"manager_teachers,omitempty"`
}

func (x *GetListManagerTeacherResponse) Reset() {
	*x = GetListManagerTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListManagerTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListManagerTeacherResponse) ProtoMessage() {}

func (x *GetListManagerTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListManagerTeacherResponse.ProtoReflect.Descriptor instead.
func (*GetListManagerTeacherResponse) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{13}
}

func (x *GetListManagerTeacherResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListManagerTeacherResponse) GetManagerTeachers() []*ManagerTeacher {
	if x != nil {
		return x.ManagerTeachers
	}
	return nil
}

type ManagerSupportTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname     string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone        string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary       float64 `protobuf:"fixed64,4,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked int32   `protobuf:"varint,5,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	Totalsum     float64 `protobuf:"fixed64,6,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
	IeltsScore   float64 `protobuf:"fixed64,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
}

func (x *ManagerSupportTeacher) Reset() {
	*x = ManagerSupportTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerSupportTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerSupportTeacher) ProtoMessage() {}

func (x *ManagerSupportTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerSupportTeacher.ProtoReflect.Descriptor instead.
func (*ManagerSupportTeacher) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{14}
}

func (x *ManagerSupportTeacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManagerSupportTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *ManagerSupportTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ManagerSupportTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *ManagerSupportTeacher) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *ManagerSupportTeacher) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

func (x *ManagerSupportTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

type CreateManagerSupportTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullname     string  `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone        string  `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary       float64 `protobuf:"fixed64,3,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked int32   `protobuf:"varint,4,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	Totalsum     float64 `protobuf:"fixed64,5,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
	IeltsScore   float64 `protobuf:"fixed64,6,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
}

func (x *CreateManagerSupportTeacher) Reset() {
	*x = CreateManagerSupportTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManagerSupportTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManagerSupportTeacher) ProtoMessage() {}

func (x *CreateManagerSupportTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManagerSupportTeacher.ProtoReflect.Descriptor instead.
func (*CreateManagerSupportTeacher) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{15}
}

func (x *CreateManagerSupportTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CreateManagerSupportTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateManagerSupportTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *CreateManagerSupportTeacher) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *CreateManagerSupportTeacher) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

func (x *CreateManagerSupportTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

type UpdateManagerSupportTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname     string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone        string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary       float64 `protobuf:"fixed64,4,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked int32   `protobuf:"varint,5,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	Totalsum     float64 `protobuf:"fixed64,6,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
	IeltsScore   float64 `protobuf:"fixed64,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
}

func (x *UpdateManagerSupportTeacher) Reset() {
	*x = UpdateManagerSupportTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManagerSupportTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManagerSupportTeacher) ProtoMessage() {}

func (x *UpdateManagerSupportTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManagerSupportTeacher.ProtoReflect.Descriptor instead.
func (*UpdateManagerSupportTeacher) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateManagerSupportTeacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateManagerSupportTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *UpdateManagerSupportTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateManagerSupportTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *UpdateManagerSupportTeacher) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *UpdateManagerSupportTeacher) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

func (x *UpdateManagerSupportTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

type ManagerSupportTeacherPrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ManagerSupportTeacherPrimaryKey) Reset() {
	*x = ManagerSupportTeacherPrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerSupportTeacherPrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerSupportTeacherPrimaryKey) ProtoMessage() {}

func (x *ManagerSupportTeacherPrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerSupportTeacherPrimaryKey.ProtoReflect.Descriptor instead.
func (*ManagerSupportTeacherPrimaryKey) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{17}
}

func (x *ManagerSupportTeacherPrimaryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetListManagerSupportTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	Page   int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetListManagerSupportTeacherRequest) Reset() {
	*x = GetListManagerSupportTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListManagerSupportTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListManagerSupportTeacherRequest) ProtoMessage() {}

func (x *GetListManagerSupportTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListManagerSupportTeacherRequest.ProtoReflect.Descriptor instead.
func (*GetListManagerSupportTeacherRequest) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{18}
}

func (x *GetListManagerSupportTeacherRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetListManagerSupportTeacherRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListManagerSupportTeacherRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetListManagerSupportTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count                  int32                    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	ManagerSupportTeachers []*ManagerSupportTeacher `protobuf:"bytes,2,rep,name=manager_support_teachers,json=managerSupportTeachers,proto3" json:"manager_support_teachers,omitempty"`
}

func (x *GetListManagerSupportTeacherResponse) Reset() {
	*x = GetListManagerSupportTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListManagerSupportTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListManagerSupportTeacherResponse) ProtoMessage() {}

func (x *GetListManagerSupportTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListManagerSupportTeacherResponse.ProtoReflect.Descriptor instead.
func (*GetListManagerSupportTeacherResponse) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{19}
}

func (x *GetListManagerSupportTeacherResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListManagerSupportTeacherResponse) GetManagerSupportTeachers() []*ManagerSupportTeacher {
	if x != nil {
		return x.ManagerSupportTeachers
	}
	return nil
}

type ManagerAdministrator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname     string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone        string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary       float64 `protobuf:"fixed64,4,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked int32   `protobuf:"varint,5,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	Totalsum     float64 `protobuf:"fixed64,6,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
	IeltsScore   float64 `protobuf:"fixed64,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
}

func (x *ManagerAdministrator) Reset() {
	*x = ManagerAdministrator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerAdministrator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerAdministrator) ProtoMessage() {}

func (x *ManagerAdministrator) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerAdministrator.ProtoReflect.Descriptor instead.
func (*ManagerAdministrator) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{20}
}

func (x *ManagerAdministrator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManagerAdministrator) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *ManagerAdministrator) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ManagerAdministrator) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *ManagerAdministrator) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *ManagerAdministrator) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

func (x *ManagerAdministrator) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

type CreateManagerAdministrator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullname     string  `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone        string  `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary       float64 `protobuf:"fixed64,3,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked int32   `protobuf:"varint,4,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	Totalsum     float64 `protobuf:"fixed64,5,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
	IeltsScore   float64 `protobuf:"fixed64,6,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
}

func (x *CreateManagerAdministrator) Reset() {
	*x = CreateManagerAdministrator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManagerAdministrator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManagerAdministrator) ProtoMessage() {}

func (x *CreateManagerAdministrator) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManagerAdministrator.ProtoReflect.Descriptor instead.
func (*CreateManagerAdministrator) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{21}
}

func (x *CreateManagerAdministrator) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CreateManagerAdministrator) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateManagerAdministrator) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *CreateManagerAdministrator) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *CreateManagerAdministrator) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

func (x *CreateManagerAdministrator) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

type UpdateManagerAdministrator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname     string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone        string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary       float64 `protobuf:"fixed64,4,opt,name=salary,proto3" json:"salary,omitempty"`
	MonthsWorked int32   `protobuf:"varint,5,opt,name=months_worked,json=monthsWorked,proto3" json:"months_worked,omitempty"`
	Totalsum     float64 `protobuf:"fixed64,6,opt,name=totalsum,proto3" json:"totalsum,omitempty"`
	IeltsScore   float64 `protobuf:"fixed64,7,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
}

func (x *UpdateManagerAdministrator) Reset() {
	*x = UpdateManagerAdministrator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManagerAdministrator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManagerAdministrator) ProtoMessage() {}

func (x *UpdateManagerAdministrator) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManagerAdministrator.ProtoReflect.Descriptor instead.
func (*UpdateManagerAdministrator) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateManagerAdministrator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateManagerAdministrator) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *UpdateManagerAdministrator) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateManagerAdministrator) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *UpdateManagerAdministrator) GetMonthsWorked() int32 {
	if x != nil {
		return x.MonthsWorked
	}
	return 0
}

func (x *UpdateManagerAdministrator) GetTotalsum() float64 {
	if x != nil {
		return x.Totalsum
	}
	return 0
}

func (x *UpdateManagerAdministrator) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

type ManagerAdministratorPrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ManagerAdministratorPrimaryKey) Reset() {
	*x = ManagerAdministratorPrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerAdministratorPrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerAdministratorPrimaryKey) ProtoMessage() {}

func (x *ManagerAdministratorPrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerAdministratorPrimaryKey.ProtoReflect.Descriptor instead.
func (*ManagerAdministratorPrimaryKey) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{23}
}

func (x *ManagerAdministratorPrimaryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetListManagerAdministratorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	Page   int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetListManagerAdministratorRequest) Reset() {
	*x = GetListManagerAdministratorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListManagerAdministratorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListManagerAdministratorRequest) ProtoMessage() {}

func (x *GetListManagerAdministratorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListManagerAdministratorRequest.ProtoReflect.Descriptor instead.
func (*GetListManagerAdministratorRequest) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{24}
}

func (x *GetListManagerAdministratorRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetListManagerAdministratorRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListManagerAdministratorRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetListManagerAdministratorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count                 int32                   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	ManagerAdministrators []*ManagerAdministrator `protobuf:"bytes,2,rep,name=manager_administrators,json=managerAdministrators,proto3" json:"manager_administrators,omitempty"`
}

func (x *GetListManagerAdministratorResponse) Reset() {
	*x = GetListManagerAdministratorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListManagerAdministratorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListManagerAdministratorResponse) ProtoMessage() {}

func (x *GetListManagerAdministratorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListManagerAdministratorResponse.ProtoReflect.Descriptor instead.
func (*GetListManagerAdministratorResponse) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{25}
}

func (x *GetListManagerAdministratorResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListManagerAdministratorResponse) GetManagerAdministrators() []*ManagerAdministrator {
	if x != nil {
		return x.ManagerAdministrators
	}
	return nil
}

type Manager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone    string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Password string  `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Salary   float64 `protobuf:"fixed64,5,opt,name=salary,proto3" json:"salary,omitempty"`
	Brach    string  `protobuf:"bytes,6,opt,name=brach,proto3" json:"brach,omitempty"`
}

func (x *Manager) Reset() {
	*x = Manager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Manager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manager) ProtoMessage() {}

func (x *Manager) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manager.ProtoReflect.Descriptor instead.
func (*Manager) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{26}
}

func (x *Manager) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Manager) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *Manager) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Manager) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Manager) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *Manager) GetBrach() string {
	if x != nil {
		return x.Brach
	}
	return ""
}

type CreateManagerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullname string  `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone    string  `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Password string  `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Salary   float64 `protobuf:"fixed64,4,opt,name=salary,proto3" json:"salary,omitempty"`
	Brach    string  `protobuf:"bytes,6,opt,name=brach,proto3" json:"brach,omitempty"`
}

func (x *CreateManagerRequest) Reset() {
	*x = CreateManagerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManagerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManagerRequest) ProtoMessage() {}

func (x *CreateManagerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManagerRequest.ProtoReflect.Descriptor instead.
func (*CreateManagerRequest) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{27}
}

func (x *CreateManagerRequest) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CreateManagerRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateManagerRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateManagerRequest) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *CreateManagerRequest) GetBrach() string {
	if x != nil {
		return x.Brach
	}
	return ""
}

type ManagerPrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ManagerPrimaryKey) Reset() {
	*x = ManagerPrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerPrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerPrimaryKey) ProtoMessage() {}

func (x *ManagerPrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerPrimaryKey.ProtoReflect.Descriptor instead.
func (*ManagerPrimaryKey) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{28}
}

func (x *ManagerPrimaryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAllManagersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit  int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetAllManagersRequest) Reset() {
	*x = GetAllManagersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllManagersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllManagersRequest) ProtoMessage() {}

func (x *GetAllManagersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllManagersRequest.ProtoReflect.Descriptor instead.
func (*GetAllManagersRequest) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{29}
}

func (x *GetAllManagersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllManagersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllManagersRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetAllManagersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Managers   []*Manager `protobuf:"bytes,1,rep,name=managers,proto3" json:"managers,omitempty"`
	TotalCount int32      `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetAllManagersResponse) Reset() {
	*x = GetAllManagersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllManagersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllManagersResponse) ProtoMessage() {}

func (x *GetAllManagersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllManagersResponse.ProtoReflect.Descriptor instead.
func (*GetAllManagersResponse) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{30}
}

func (x *GetAllManagersResponse) GetManagers() []*Manager {
	if x != nil {
		return x.Managers
	}
	return nil
}

func (x *GetAllManagersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type UpdateManagerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Fullname string  `protobuf:"bytes,2,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Phone    string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Password string  `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Salary   float64 `protobuf:"fixed64,5,opt,name=salary,proto3" json:"salary,omitempty"`
	Brach    string  `protobuf:"bytes,6,opt,name=brach,proto3" json:"brach,omitempty"`
}

func (x *UpdateManagerRequest) Reset() {
	*x = UpdateManagerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superadmin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManagerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManagerRequest) ProtoMessage() {}

func (x *UpdateManagerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_superadmin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManagerRequest.ProtoReflect.Descriptor instead.
func (*UpdateManagerRequest) Descriptor() ([]byte, []int) {
	return file_superadmin_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateManagerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateManagerRequest) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *UpdateManagerRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateManagerRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateManagerRequest) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *UpdateManagerRequest) GetBrach() string {
	if x != nil {
		return x.Brach
	}
	return ""
}

var File_superadmin_proto protoreflect.FileDescriptor

var file_superadmin_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x4b, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x75,
	0x74, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x75, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a,
	0x0e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x61, 0x69, 0x64, 0x53, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x22, 0xa2, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x73,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x61, 0x69, 0x64, 0x53, 0x75,
	0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d,
	0x22, 0xb2, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x69, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70,
	0x61, 0x69, 0x64, 0x53, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x75, 0x6d, 0x22, 0x2a, 0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x60, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x10, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xd2,
	0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73,
	0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73,
	0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x60, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x84, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x10, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xc9,
	0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c,
	0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61,
	0x6c, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x31, 0x0a, 0x1f, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x23, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x63, 0x0a, 0x18, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x16,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x14, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65,
	0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61,
	0x6c, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74,
	0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x75, 0x6d,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x22, 0x30, 0x0a, 0x1e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x23,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5f, 0x0a, 0x16, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x15, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x07, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x72, 0x61, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61,
	0x63, 0x68, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x72, 0x61, 0x63, 0x68, 0x22, 0x23, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x72, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72,
	0x61, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x63, 0x68,
	0x32, 0x94, 0x15, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x1a, 0x22,
	0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x12, 0x62, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x1a, 0x22, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x75, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x28,
	0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x2c, 0x2e, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x5d, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x1a, 0x22, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x62, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x22, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x75, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x12, 0x30,
	0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x22,
	0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x12, 0x6b, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x1a, 0x2c, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12,
	0x72, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x29, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x12, 0x77, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x33, 0x2e, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x1a, 0x29, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x8a, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x12, 0x37, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x38, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x12, 0x2f, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x1a, 0x29, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x80, 0x01,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x33, 0x2e, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x12, 0x56, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x28, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x1a, 0x1b, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x67,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73,
	0x12, 0x29, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x5d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x12, 0x25, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x25, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x6f,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x28, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x74, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x28, 0x2e, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x36,
	0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x32, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x32, 0x2e, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x47,
	0x0a, 0x0b, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x6f, 0x43, 0x53, 0x56, 0x12, 0x1d, 0x2e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x19, 0x2e, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_superadmin_proto_rawDescOnce sync.Once
	file_superadmin_proto_rawDescData = file_superadmin_proto_rawDesc
)

func file_superadmin_proto_rawDescGZIP() []byte {
	file_superadmin_proto_rawDescOnce.Do(func() {
		file_superadmin_proto_rawDescData = protoimpl.X.CompressGZIP(file_superadmin_proto_rawDescData)
	})
	return file_superadmin_proto_rawDescData
}

var file_superadmin_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_superadmin_proto_goTypes = []interface{}{
	(*Empty)(nil),                                // 0: superadmin_service.Empty
	(*TableName)(nil),                            // 1: superadmin_service.TableName
	(*ManagerStudent)(nil),                       // 2: superadmin_service.ManagerStudent
	(*CreateManagerStudent)(nil),                 // 3: superadmin_service.CreateManagerStudent
	(*UpdateManagerStudent)(nil),                 // 4: superadmin_service.UpdateManagerStudent
	(*ManagerStudentPrimaryKey)(nil),             // 5: superadmin_service.ManagerStudentPrimaryKey
	(*GetListManagerStudentRequest)(nil),         // 6: superadmin_service.GetListManagerStudentRequest
	(*GetListManagerStudentResponse)(nil),        // 7: superadmin_service.GetListManagerStudentResponse
	(*ManagerTeacher)(nil),                       // 8: superadmin_service.ManagerTeacher
	(*CreateManagerTeacher)(nil),                 // 9: superadmin_service.CreateManagerTeacher
	(*UpdateManagerTeacher)(nil),                 // 10: superadmin_service.UpdateManagerTeacher
	(*ManagerTeacherPrimaryKey)(nil),             // 11: superadmin_service.ManagerTeacherPrimaryKey
	(*GetListManagerTeacherRequest)(nil),         // 12: superadmin_service.GetListManagerTeacherRequest
	(*GetListManagerTeacherResponse)(nil),        // 13: superadmin_service.GetListManagerTeacherResponse
	(*ManagerSupportTeacher)(nil),                // 14: superadmin_service.ManagerSupportTeacher
	(*CreateManagerSupportTeacher)(nil),          // 15: superadmin_service.CreateManagerSupportTeacher
	(*UpdateManagerSupportTeacher)(nil),          // 16: superadmin_service.UpdateManagerSupportTeacher
	(*ManagerSupportTeacherPrimaryKey)(nil),      // 17: superadmin_service.ManagerSupportTeacherPrimaryKey
	(*GetListManagerSupportTeacherRequest)(nil),  // 18: superadmin_service.GetListManagerSupportTeacherRequest
	(*GetListManagerSupportTeacherResponse)(nil), // 19: superadmin_service.GetListManagerSupportTeacherResponse
	(*ManagerAdministrator)(nil),                 // 20: superadmin_service.ManagerAdministrator
	(*CreateManagerAdministrator)(nil),           // 21: superadmin_service.CreateManagerAdministrator
	(*UpdateManagerAdministrator)(nil),           // 22: superadmin_service.UpdateManagerAdministrator
	(*ManagerAdministratorPrimaryKey)(nil),       // 23: superadmin_service.ManagerAdministratorPrimaryKey
	(*GetListManagerAdministratorRequest)(nil),   // 24: superadmin_service.GetListManagerAdministratorRequest
	(*GetListManagerAdministratorResponse)(nil),  // 25: superadmin_service.GetListManagerAdministratorResponse
	(*Manager)(nil),                              // 26: superadmin_service.Manager
	(*CreateManagerRequest)(nil),                 // 27: superadmin_service.CreateManagerRequest
	(*ManagerPrimaryKey)(nil),                    // 28: superadmin_service.ManagerPrimaryKey
	(*GetAllManagersRequest)(nil),                // 29: superadmin_service.GetAllManagersRequest
	(*GetAllManagersResponse)(nil),               // 30: superadmin_service.GetAllManagersResponse
	(*UpdateManagerRequest)(nil),                 // 31: superadmin_service.UpdateManagerRequest
}
var file_superadmin_proto_depIdxs = []int32{
	2,  // 0: superadmin_service.GetListManagerStudentResponse.manager_students:type_name -> superadmin_service.ManagerStudent
	8,  // 1: superadmin_service.GetListManagerTeacherResponse.manager_teachers:type_name -> superadmin_service.ManagerTeacher
	14, // 2: superadmin_service.GetListManagerSupportTeacherResponse.manager_support_teachers:type_name -> superadmin_service.ManagerSupportTeacher
	20, // 3: superadmin_service.GetListManagerAdministratorResponse.manager_administrators:type_name -> superadmin_service.ManagerAdministrator
	26, // 4: superadmin_service.GetAllManagersResponse.managers:type_name -> superadmin_service.Manager
	3,  // 5: superadmin_service.ManagerService.CreateStudent:input_type -> superadmin_service.CreateManagerStudent
	5,  // 6: superadmin_service.ManagerService.GetStudentByID:input_type -> superadmin_service.ManagerStudentPrimaryKey
	6,  // 7: superadmin_service.ManagerService.GetAllStudents:input_type -> superadmin_service.GetListManagerStudentRequest
	4,  // 8: superadmin_service.ManagerService.UpdateStudent:input_type -> superadmin_service.UpdateManagerStudent
	5,  // 9: superadmin_service.ManagerService.DeleteStudent:input_type -> superadmin_service.ManagerStudentPrimaryKey
	9,  // 10: superadmin_service.ManagerService.CreateTeacher:input_type -> superadmin_service.CreateManagerTeacher
	11, // 11: superadmin_service.ManagerService.GetTeacherByID:input_type -> superadmin_service.ManagerTeacherPrimaryKey
	12, // 12: superadmin_service.ManagerService.GetAllTeachers:input_type -> superadmin_service.GetListManagerTeacherRequest
	10, // 13: superadmin_service.ManagerService.UpdateTeacher:input_type -> superadmin_service.UpdateManagerTeacher
	11, // 14: superadmin_service.ManagerService.DeleteTeacher:input_type -> superadmin_service.ManagerTeacherPrimaryKey
	15, // 15: superadmin_service.ManagerService.CreateSupportTeacher:input_type -> superadmin_service.CreateManagerSupportTeacher
	17, // 16: superadmin_service.ManagerService.GetSupportTeacherByID:input_type -> superadmin_service.ManagerSupportTeacherPrimaryKey
	18, // 17: superadmin_service.ManagerService.GetAllSupportTeachers:input_type -> superadmin_service.GetListManagerSupportTeacherRequest
	16, // 18: superadmin_service.ManagerService.UpdateSupportTeacher:input_type -> superadmin_service.UpdateManagerSupportTeacher
	17, // 19: superadmin_service.ManagerService.DeleteSupportTeacher:input_type -> superadmin_service.ManagerSupportTeacherPrimaryKey
	27, // 20: superadmin_service.ManagerService.CreateManager:input_type -> superadmin_service.CreateManagerRequest
	28, // 21: superadmin_service.ManagerService.GetManagerByID:input_type -> superadmin_service.ManagerPrimaryKey
	29, // 22: superadmin_service.ManagerService.GetAllManagers:input_type -> superadmin_service.GetAllManagersRequest
	31, // 23: superadmin_service.ManagerService.UpdateManager:input_type -> superadmin_service.UpdateManagerRequest
	28, // 24: superadmin_service.ManagerService.DeleteManager:input_type -> superadmin_service.ManagerPrimaryKey
	21, // 25: superadmin_service.ManagerService.CreateAdministrator:input_type -> superadmin_service.CreateManagerAdministrator
	23, // 26: superadmin_service.ManagerService.GetAdministratorByID:input_type -> superadmin_service.ManagerAdministratorPrimaryKey
	24, // 27: superadmin_service.ManagerService.GetAllAdministrators:input_type -> superadmin_service.GetListManagerAdministratorRequest
	23, // 28: superadmin_service.ManagerService.DeleteAdministrator:input_type -> superadmin_service.ManagerAdministratorPrimaryKey
	1,  // 29: superadmin_service.ManagerService.ExportToCSV:input_type -> superadmin_service.TableName
	2,  // 30: superadmin_service.ManagerService.CreateStudent:output_type -> superadmin_service.ManagerStudent
	2,  // 31: superadmin_service.ManagerService.GetStudentByID:output_type -> superadmin_service.ManagerStudent
	7,  // 32: superadmin_service.ManagerService.GetAllStudents:output_type -> superadmin_service.GetListManagerStudentResponse
	2,  // 33: superadmin_service.ManagerService.UpdateStudent:output_type -> superadmin_service.ManagerStudent
	5,  // 34: superadmin_service.ManagerService.DeleteStudent:output_type -> superadmin_service.ManagerStudentPrimaryKey
	8,  // 35: superadmin_service.ManagerService.CreateTeacher:output_type -> superadmin_service.ManagerTeacher
	8,  // 36: superadmin_service.ManagerService.GetTeacherByID:output_type -> superadmin_service.ManagerTeacher
	13, // 37: superadmin_service.ManagerService.GetAllTeachers:output_type -> superadmin_service.GetListManagerTeacherResponse
	8,  // 38: superadmin_service.ManagerService.UpdateTeacher:output_type -> superadmin_service.ManagerTeacher
	11, // 39: superadmin_service.ManagerService.DeleteTeacher:output_type -> superadmin_service.ManagerTeacherPrimaryKey
	14, // 40: superadmin_service.ManagerService.CreateSupportTeacher:output_type -> superadmin_service.ManagerSupportTeacher
	14, // 41: superadmin_service.ManagerService.GetSupportTeacherByID:output_type -> superadmin_service.ManagerSupportTeacher
	19, // 42: superadmin_service.ManagerService.GetAllSupportTeachers:output_type -> superadmin_service.GetListManagerSupportTeacherResponse
	14, // 43: superadmin_service.ManagerService.UpdateSupportTeacher:output_type -> superadmin_service.ManagerSupportTeacher
	17, // 44: superadmin_service.ManagerService.DeleteSupportTeacher:output_type -> superadmin_service.ManagerSupportTeacherPrimaryKey
	26, // 45: superadmin_service.ManagerService.CreateManager:output_type -> superadmin_service.Manager
	26, // 46: superadmin_service.ManagerService.GetManagerByID:output_type -> superadmin_service.Manager
	30, // 47: superadmin_service.ManagerService.GetAllManagers:output_type -> superadmin_service.GetAllManagersResponse
	26, // 48: superadmin_service.ManagerService.UpdateManager:output_type -> superadmin_service.Manager
	28, // 49: superadmin_service.ManagerService.DeleteManager:output_type -> superadmin_service.ManagerPrimaryKey
	20, // 50: superadmin_service.ManagerService.CreateAdministrator:output_type -> superadmin_service.ManagerAdministrator
	20, // 51: superadmin_service.ManagerService.GetAdministratorByID:output_type -> superadmin_service.ManagerAdministrator
	25, // 52: superadmin_service.ManagerService.GetAllAdministrators:output_type -> superadmin_service.GetListManagerAdministratorResponse
	23, // 53: superadmin_service.ManagerService.DeleteAdministrator:output_type -> superadmin_service.ManagerAdministratorPrimaryKey
	0,  // 54: superadmin_service.ManagerService.ExportToCSV:output_type -> superadmin_service.Empty
	30, // [30:55] is the sub-list for method output_type
	5,  // [5:30] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_superadmin_proto_init() }
func file_superadmin_proto_init() {
	if File_superadmin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_superadmin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerStudent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManagerStudent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateManagerStudent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerStudentPrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListManagerStudentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListManagerStudentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManagerTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateManagerTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerTeacherPrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListManagerTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListManagerTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerSupportTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManagerSupportTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateManagerSupportTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerSupportTeacherPrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListManagerSupportTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListManagerSupportTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerAdministrator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManagerAdministrator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateManagerAdministrator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerAdministratorPrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListManagerAdministratorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListManagerAdministratorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Manager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManagerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerPrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllManagersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllManagersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superadmin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateManagerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_superadmin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_superadmin_proto_goTypes,
		DependencyIndexes: file_superadmin_proto_depIdxs,
		MessageInfos:      file_superadmin_proto_msgTypes,
	}.Build()
	File_superadmin_proto = out.File
	file_superadmin_proto_rawDesc = nil
	file_superadmin_proto_goTypes = nil
	file_superadmin_proto_depIdxs = nil
}
